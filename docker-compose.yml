version: "3.9"
services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes: 
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8080:80"
  api:
    container_name: api
    build: .
    depends_on:
      - postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      telegraf: ${telegraf}
      recaptchaSecret: ${recaptchaSecret}
      god: ${god}
      firebaseServiceAccount: ${firebaseServiceAccount}
      PORT: 5075
    ports:
      - "5075:5075"
  forecast-api:
    extends:
      file: ../forecast-api-dev/docker-compose.yml
      service: forecast-api
    depends_on:
      - postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 5000
    ports:
      - "5000:5000"
  redis:
    extends:
      file: ../forecast-api-dev/docker-compose.yml
      service: redis
volumes:
    pgdata:
    pgadmin-data: